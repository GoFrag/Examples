<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="81" errors="0" failures="1" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2015-09-11" time="13:23:11">
  <environment user="Demo" machine-name="PSDEMO45" cwd="C:\Git\Examples\Configs\PSSummitEU2015\DevOps" user-domain="PSDEMO45" platform="Microsoft Windows 10 Enterprise|C:\windows|\Device\Harddisk0\Partition2" nunit-version="2.5.8.0" os-version="10.0.10240" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Powershell" name="Pester" executed="True" result="Failure" success="False" time="13.0911" asserts="0">
    <results>
      <test-suite type="TestFixture" name="Website Configuration" executed="True" result="Failure" success="False" time="2.5997" asserts="0" description="Website Configuration">
        <results>
          <test-case description="Should be a DSC configuration script" name="Website Configuration.Should be a DSC configuration script" executed="True" time="0.1433" asserts="0" success="True" result="Success" />
          <test-case description="Should not be a DSC Meta-configuration" name="Website Configuration.Should not be a DSC Meta-configuration" executed="True" time="0.0105" asserts="0" success="True" result="Success" />
          <test-case description="Should require the source path parameter" name="Website Configuration.Should require the source path parameter" executed="True" time="0.0118" asserts="0" success="True" result="Success" />
          <test-case description="Should fail when an invalid source path is provided" name="Website Configuration.Should fail when an invalid source path is provided" executed="True" time="0.3909" asserts="0" success="False" result="Failure">
            <failure>
              <message>Cannot process argument transformation on parameter 'script'. Cannot convert the "C:\Git\Examples\Configs\PSSummitEU2015\DevOps\Website\Website.FourthCoffee.mof" value of type "System.IO.FileInfo" to type "System.Management.Automation.ScriptBlock".</message>
              <stack-trace>at line: 45 in C:\Program Files\WindowsPowerShell\Modules\Pester\3.3.5\Functions\Assertions\Should.ps1</stack-trace>
            </failure>
          </test-case>
          <test-case description="Should include the following 3 parameters: 'SourcePath','WebsiteName','DestinationRootPath' " name="Website Configuration.Should include the following 3 parameters: 'SourcePath','WebsiteName','DestinationRootPath' " executed="True" time="0.014" asserts="0" success="True" result="Success" />
          <test-case description="Should use the xWebsite DSC resource" name="Website Configuration.Should use the xWebsite DSC resource" executed="True" time="0.0098" asserts="0" success="True" result="Success" />
          <test-case description="Should generate a single mof file." name="Website Configuration.Should generate a single mof file." executed="True" time="0.4369" asserts="0" success="True" result="Success" />
          <test-case description="Should generate a mof file with the name 'Website.FourthCoffee'." name="Website Configuration.Should generate a mof file with the name 'Website.FourthCoffee'." executed="True" time="0.3848" asserts="0" success="True" result="Success" />
          <test-case description="Should be a valid mof document" name="Website Configuration.Should be a valid mof document" executed="True" time="0.4161" asserts="0" success="True" result="Success" />
          <test-case description="Should generate a new version (2.0) mof document." name="Website Configuration.Should generate a new version (2.0) mof document." executed="True" time="0.3916" asserts="0" success="True" result="Success" />
          <test-case description="Should create a mof that has a website named 'BustersBuns'." name="Website Configuration.Should create a mof that has a website named 'BustersBuns'." executed="True" time="0.39" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Schema Validation MSFT_xWebsite" executed="True" result="Success" success="True" time="0.796" asserts="0" description="Schema Validation MSFT_xWebsite">
        <results>
          <test-case description="should pass Test-xDscResource" name="Schema Validation MSFT_xWebsite.should pass Test-xDscResource" executed="True" time="0.5164" asserts="0" success="True" result="Success" />
          <test-case description="should pass Test-xDscResource" name="Schema Validation MSFT_xWebsite.should pass Test-xDscResource" executed="True" time="0.2796" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="how Test-TargetResource to Ensure = 'Present'" executed="True" result="Success" success="True" time="1.1458" asserts="0" description="how Test-TargetResource to Ensure = 'Present'">
        <results>
          <test-case description="should throw an error if WebAdministration is not installed" name="how Test-TargetResource to Ensure = 'Present'.should throw an error if WebAdministration is not installed" executed="True" time="0.0904" asserts="0" success="True" result="Success" />
          <test-case description="should return false" name="how Test-TargetResource to Ensure = 'Present'.should return false" executed="True" time="0.1789" asserts="0" success="True" result="Success" />
          <test-case description="should return false" name="how Test-TargetResource to Ensure = 'Present'.should return false" executed="True" time="0.1637" asserts="0" success="True" result="Success" />
          <test-case description="should return false" name="how Test-TargetResource to Ensure = 'Present'.should return false" executed="True" time="0.1739" asserts="0" success="True" result="Success" />
          <test-case description="should return false" name="how Test-TargetResource to Ensure = 'Present'.should return false" executed="True" time="0.1765" asserts="0" success="True" result="Success" />
          <test-case description="should return false" name="how Test-TargetResource to Ensure = 'Present'.should return false" executed="True" time="0.1842" asserts="0" success="True" result="Success" />
          <test-case description="should return false" name="how Test-TargetResource to Ensure = 'Present'.should return false" executed="True" time="0.1782" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="how Get-TargetResource responds to Ensure = 'Present'" executed="True" result="Success" success="True" time="1.2854" asserts="0" description="how Get-TargetResource responds to Ensure = 'Present'">
        <results>
          <test-case description="should throw an error if WebAdministration is not installed" name="how Get-TargetResource responds to Ensure = 'Present'.should throw an error if WebAdministration is not installed" executed="True" time="0.1514" asserts="0" success="True" result="Success" />
          <test-case description="should return absent" name="how Get-TargetResource responds to Ensure = 'Present'.should return absent" executed="True" time="0.2513" asserts="0" success="True" result="Success" />
          <test-case description="should throw &quot;WebsiteDiscoveryFailure&quot;" name="how Get-TargetResource responds to Ensure = 'Present'.should throw &quot;WebsiteDiscoveryFailure&quot;" executed="True" time="0.262" asserts="0" success="True" result="Success" />
          <test-case description="should not throw" name="how Get-TargetResource responds to Ensure = 'Present'.should not throw" executed="True" time="0.2906" asserts="0" success="True" result="Success" />
          <test-case description="should call Get-Website once" name="how Get-TargetResource responds to Ensure = 'Present'.should call Get-Website once" executed="True" time="0.2058" asserts="0" success="True" result="Success" />
          <test-case description="should call Get-itemProperty once" name="how Get-TargetResource responds to Ensure = 'Present'.should call Get-itemProperty once" executed="True" time="0.0256" asserts="0" success="True" result="Success" />
          <test-case description="should return the name" name="how Get-TargetResource responds to Ensure = 'Present'.should return the name" executed="True" time="0.0234" asserts="0" success="True" result="Success" />
          <test-case description="should return the EnsureResult" name="how Get-TargetResource responds to Ensure = 'Present'.should return the EnsureResult" executed="True" time="0.0198" asserts="0" success="True" result="Success" />
          <test-case description="should return the PhysicalPath" name="how Get-TargetResource responds to Ensure = 'Present'.should return the PhysicalPath" executed="True" time="0.0192" asserts="0" success="True" result="Success" />
          <test-case description="should return the State" name="how Get-TargetResource responds to Ensure = 'Present'.should return the State" executed="True" time="0.0198" asserts="0" success="True" result="Success" />
          <test-case description="should return the ID" name="how Get-TargetResource responds to Ensure = 'Present'.should return the ID" executed="True" time="0.0165" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="how Set-TargetResource responds to Ensure = 'Present'" executed="True" result="Success" success="True" time="3.7302" asserts="0" description="how Set-TargetResource responds to Ensure = 'Present'">
        <results>
          <test-case description="should call all the mocks" name="how Set-TargetResource responds to Ensure = 'Present'.should call all the mocks" executed="True" time="0.4883" asserts="0" success="True" result="Success" />
          <test-case description="should throw the right error" name="how Set-TargetResource responds to Ensure = 'Present'.should throw the right error" executed="True" time="0.3705" asserts="0" success="True" result="Success" />
          <test-case description="Should throw the correct error" name="how Set-TargetResource responds to Ensure = 'Present'.Should throw the correct error" executed="True" time="0.7451" asserts="0" success="True" result="Success" />
          <test-case description="should call all the mocks" name="how Set-TargetResource responds to Ensure = 'Present'.should call all the mocks" executed="True" time="0.4182" asserts="0" success="True" result="Success" />
          <test-case description="should call all the mocks" name="how Set-TargetResource responds to Ensure = 'Present'.should call all the mocks" executed="True" time="1.4131" asserts="0" success="True" result="Success" />
          <test-case description="Should throw the correct error" name="how Set-TargetResource responds to Ensure = 'Present'.Should throw the correct error" executed="True" time="0.295" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="how Set-TargetResource responds to Ensure = 'Absent'" executed="True" result="Success" success="True" time="0.1952" asserts="0" description="how Set-TargetResource responds to Ensure = 'Absent'">
        <results>
          <test-case description="should call Remove-Website" name="how Set-TargetResource responds to Ensure = 'Absent'.should call Remove-Website" executed="True" time="0.1463" asserts="0" success="True" result="Success" />
          <test-case description="should throw the right error" name="how Set-TargetResource responds to Ensure = 'Absent'.should throw the right error" executed="True" time="0.0489" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="how Get-WebBindingObject responds" executed="True" result="Success" success="True" time="0.6445" asserts="0" description="how Get-WebBindingObject responds">
        <results>
          <test-case description="should return the IPv6 address" name="how Get-WebBindingObject responds.should return the IPv6 address" executed="True" time="0.1044" asserts="0" success="True" result="Success" />
          <test-case description="should return http" name="how Get-WebBindingObject responds.should return http" executed="True" time="0.0151" asserts="0" success="True" result="Success" />
          <test-case description="should return the hostname" name="how Get-WebBindingObject responds.should return the hostname" executed="True" time="0.0181" asserts="0" success="True" result="Success" />
          <test-case description="should return the port" name="how Get-WebBindingObject responds.should return the port" executed="True" time="0.0178" asserts="0" success="True" result="Success" />
          <test-case description="should return the IPv6 address" name="how Get-WebBindingObject responds.should return the IPv6 address" executed="True" time="0.087" asserts="0" success="True" result="Success" />
          <test-case description="should return http" name="how Get-WebBindingObject responds.should return http" executed="True" time="0.0154" asserts="0" success="True" result="Success" />
          <test-case description="should return the hostname" name="how Get-WebBindingObject responds.should return the hostname" executed="True" time="0.019" asserts="0" success="True" result="Success" />
          <test-case description="should return the port" name="how Get-WebBindingObject responds.should return the port" executed="True" time="0.0182" asserts="0" success="True" result="Success" />
          <test-case description="should return the IPv6 address" name="how Get-WebBindingObject responds.should return the IPv6 address" executed="True" time="0.0877" asserts="0" success="True" result="Success" />
          <test-case description="should return http" name="how Get-WebBindingObject responds.should return http" executed="True" time="0.0182" asserts="0" success="True" result="Success" />
          <test-case description="should return the hostname" name="how Get-WebBindingObject responds.should return the hostname" executed="True" time="0.0151" asserts="0" success="True" result="Success" />
          <test-case description="should return the port" name="how Get-WebBindingObject responds.should return the port" executed="True" time="0.0208" asserts="0" success="True" result="Success" />
          <test-case description="should return the Hash" name="how Get-WebBindingObject responds.should return the Hash" executed="True" time="0.0151" asserts="0" success="True" result="Success" />
          <test-case description="should return the store" name="how Get-WebBindingObject responds.should return the store" executed="True" time="0.0178" asserts="0" success="True" result="Success" />
          <test-case description="should return the IPv6 address" name="how Get-WebBindingObject responds.should return the IPv6 address" executed="True" time="0.0871" asserts="0" success="True" result="Success" />
          <test-case description="should return http" name="how Get-WebBindingObject responds.should return http" executed="True" time="0.0175" asserts="0" success="True" result="Success" />
          <test-case description="should return the hostname" name="how Get-WebBindingObject responds.should return the hostname" executed="True" time="0.0181" asserts="0" success="True" result="Success" />
          <test-case description="should return the port" name="how Get-WebBindingObject responds.should return the port" executed="True" time="0.018" asserts="0" success="True" result="Success" />
          <test-case description="should return the Hash" name="how Get-WebBindingObject responds.should return the Hash" executed="True" time="0.0188" asserts="0" success="True" result="Success" />
          <test-case description="should return the store" name="how Get-WebBindingObject responds.should return the store" executed="True" time="0.0153" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-WebsitePath" executed="True" result="Success" success="True" time="0.2357" asserts="0" description="Test-WebsitePath">
        <results>
          <test-case description="Should return true" name="Test-WebsitePath.Should return true" executed="True" time="0.143" asserts="0" success="True" result="Success" />
          <test-case description="Should return false if the path does not need to be updated" name="Test-WebsitePath.Should return false if the path does not need to be updated" executed="True" time="0.0927" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Confirm-PortIPHostisUnique" executed="True" result="Success" success="True" time="0.2091" asserts="0" description="Confirm-PortIPHostisUnique">
        <results>
          <test-case description="should return false" name="Confirm-PortIPHostisUnique.should return false" executed="True" time="0.1274" asserts="0" success="True" result="Success" />
          <test-case description="should return true" name="Confirm-PortIPHostisUnique.should return true" executed="True" time="0.0817" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Test-WebsiteBindings" executed="True" result="Success" success="True" time="1.2383" asserts="0" description="Test-WebsiteBindings">
        <results>
          <test-case description="should throw an error" name="Test-WebsiteBindings.should throw an error" executed="True" time="0.1751" asserts="0" success="True" result="Success" />
          <test-case description="should return an error" name="Test-WebsiteBindings.should return an error" executed="True" time="0.1135" asserts="0" success="True" result="Success" />
          <test-case description="should return true" name="Test-WebsiteBindings.should return true" executed="True" time="0.119" asserts="0" success="True" result="Success" />
          <test-case description="should return true" name="Test-WebsiteBindings.should return true" executed="True" time="0.1141" asserts="0" success="True" result="Success" />
          <test-case description="should return true" name="Test-WebsiteBindings.should return true" executed="True" time="0.1209" asserts="0" success="True" result="Success" />
          <test-case description="should return false" name="Test-WebsiteBindings.should return false" executed="True" time="0.1238" asserts="0" success="True" result="Success" />
          <test-case description="should return true" name="Test-WebsiteBindings.should return true" executed="True" time="0.1187" asserts="0" success="True" result="Success" />
          <test-case description="should return true" name="Test-WebsiteBindings.should return true" executed="True" time="0.1171" asserts="0" success="True" result="Success" />
          <test-case description="should return true" name="Test-WebsiteBindings.should return true" executed="True" time="0.1184" asserts="0" success="True" result="Success" />
          <test-case description="should return false" name="Test-WebsiteBindings.should return false" executed="True" time="0.1176" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Update-WebsiteBinding" executed="True" result="Success" success="True" time="0.8505" asserts="0" description="Update-WebsiteBinding">
        <results>
          <test-case description="should call all the mocks" name="Update-WebsiteBinding.should call all the mocks" executed="True" time="0.1843" asserts="0" success="True" result="Success" />
          <test-case description="should use the right name" name="Update-WebsiteBinding.should use the right name" executed="True" time="0.0188" asserts="0" success="True" result="Success" />
          <test-case description="should use the right protocol" name="Update-WebsiteBinding.should use the right protocol" executed="True" time="0.0195" asserts="0" success="True" result="Success" />
          <test-case description="should use the right IPaddress" name="Update-WebsiteBinding.should use the right IPaddress" executed="True" time="0.0187" asserts="0" success="True" result="Success" />
          <test-case description="should use the right Hostheader" name="Update-WebsiteBinding.should use the right Hostheader" executed="True" time="0.0159" asserts="0" success="True" result="Success" />
          <test-case description="should throw the right error" name="Update-WebsiteBinding.should throw the right error" executed="True" time="0.1185" asserts="0" success="True" result="Success" />
          <test-case description="should throw the right error" name="Update-WebsiteBinding.should throw the right error" executed="True" time="0.4748" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Update-DefaultPages" executed="True" result="Success" success="True" time="0.1608" asserts="0" description="Update-DefaultPages">
        <results>
          <test-case description="should call Add-WebConfiguration" name="Update-DefaultPages.should call Add-WebConfiguration" executed="True" time="0.1608" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>